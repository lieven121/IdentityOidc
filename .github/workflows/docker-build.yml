name: Docker Build and Publish

# Trigger on pushes to specific branches and on version tags.
on:
  push:
    branches:
      - dev
      - release
      - master
    tags:
      - "v*.*.*" # e.g. v1.2.3
  pull_request:
    branches: ["master", "dev"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code so we can access the Dockerfile and version file.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker Buildx (a tool for building multi-platform images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine build target and image tag
        id: build_info
        run: chmod +x ./.github/scripts/determine-build-target.sh && ./.github/scripts/determine-build-target.sh
        env:
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_OUTPUT: $GITHUB_OUTPUT

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ steps.build_info.outputs.IMAGE_TAG }}

      # Build and push the Docker image using the tag determined above.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Identity.App/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.build_info.outputs.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
